= retryable_record

Retries an operation on an ActiveRecord until no StaleObjectError is being raised.

Gem[https://rubygems.org/gems/retryable_record]
Source[http://github.com/neopoly/retryable_record] |
RDoc[http://rdoc.info/projects/neopoly/retryable_record] |
{<img src="https://secure.travis-ci.org/neopoly/retryable_record.png?branch=master" alt="Build Status" />}[http://travis-ci.org/neopoly/retryable_record]


== Usage

  require 'retryable_record'

  class User < ActiveRecord::Base
    include RetryableRecord
  end

  user = User.first

  user.retryable do
    user.username = "foo"
    user.save!
  end

== Credits

Inspired by
* http://vision-media.ca/resources/ruby/better-ruby-retryable-method
* http://blog.codefront.net/2008/01/14/retrying-code-blocks-in-ruby-on-exceptions-whatever/
* http://github.com/carlo/retryable

== TODO

* Better example in README
* Intergration test with ActiveRecord

== Note on Patches/Pull Requests
 
* Fork the project.
* Make your feature addition or bug fix.
* Add tests for it. This is important so I don't break it in a
  future version unintentionally.
* Commit, do not mess with rakefile, version, or history.
  (if you want to have your own version, that is fine but bump version in a commit by itself I can ignore when I pull)
* Send me a pull request. Bonus points for topic branches.

== Copyright

Copyright (c) 2010 Peter Suschlik. See LICENSE for details.
